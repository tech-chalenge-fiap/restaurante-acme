name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '20'

      - run: npm install

      - run: npm run test

      - id: test_status
        name: Get Test Status
        run: echo "TEST_STATUS=${{ steps.test-conclusion.outcome }}" >> $GITHUB_ENV  # Store in environment variable

  build-and-publish:
    name: Build and Publish Docker Image to ECR
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1

      - uses: aws-actions/configure-aws-credentials@v4
        name: Configure AWS Credentials
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr
        with:
          aws-region: ${{ secrets.AWS_REGION }}

      - id: image_tag
        name: Generate Image Tag
        run: echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - run: |
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ github.repository }}:${{ env.IMAGE_TAG }} .

      - run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ github.repository }}:${{ env.IMAGE_TAG }}

  deploy-eks:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: [build-and-publish]

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Kubernetes cluster
        uses: kodermax/kubectl-aws-eks@master
        env:
          RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ github.repository }}:${{ env.IMAGE_TAG }}
        with:
          args: |
            kubectl apply -f k8s/deployment.yaml
            set image deployment/restaurante-acme app=${{ env.RELEASE_IMAGE }} --record -n $KUBE_NAMESPACE
            kubectl rollout status deployment/restaurante-acme

      # - run: |
      #     kubectl apply -f k8s/deployment.yaml

      # - run: |
      #     kubectl set image deployment/restaurante-acme restaurante-acme=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/restaurante-acme:${{ env.IMAGE_TAG }}
      #     kubectl rollout status deployment/restaurante-acme
